name: mobile-orchestrator
on:
  issues:
    types: [opened, labeled]

permissions:
  contents: write
  id-token: write
  issues: write

jobs:
  run:
    if: contains(join(github.event.issue.labels.*.name, ','), 'orchestrate')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Auth to GCP via OIDC
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_WIF_SA }}
          token_format: 'access_token'

      - name: Install gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Set defaults
        run: gcloud config set run/region "${{ secrets.GCP_REGION || 'us-east1' }}"

      - name: Bootstrap (idempotent)
        run: bash ops/bootstrap.sh

      - name: Deploy
        env:
          SERVICE: autonomy-api
        run: make deploy SERVICE="$SERVICE"

      - name: Smoke test
        env:
          SERVICE: autonomy-api
        run: ops/smoke.sh "$SERVICE"

      - name: Comment result
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const runUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`;
            const body = [
              `**Task:** full-run`,
              `**Service:** autonomy-api`,
              `**Region:** ${{ secrets.GCP_REGION || 'us-east1' }}`,
              `**Project:** ${{ secrets.GCP_PROJECT_ID }}`,
              `**Run:** ${runUrl}`
            ].join('
');
            await github.rest.issues.createComment({ owner: context.repo.owner, repo: context.repo.repo, issue_number: context.issue.number, body });
